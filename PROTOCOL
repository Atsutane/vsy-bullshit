Protokolldokumentation

Als grundlegende Technik kommt HTTP + JSON zum Einsatz.

Wir gehen davon aus, dass Spielernamen eindeutig sind. Weiter Authentifikation
ist nicht nötig, alle haben sich lieb.

Generell gilt, dass Responses auf POSTs immer "success" und "error" in der
Response haben. "success" ist ein Boolean. Sofern er auf false steht, enthält
"error" eine passende Fehlermeldung, die dem Benutzer angezeigt werden sollte.

-------------------------------
Request: GET /CurrentGames
Body: <ignoriert>
Response:
[
 {"id":"3984843...",
  "participants": [
    "Atsutane",
    "sECuRE"
   ],
   "name":"foo",
   "created":123
 },
 {"id":"333...",
  "participants": [ ],
   "name":"Unbenannt 29eaa93",
   "created":456
 }
]

-------------------------------
Request: POST /RegisterPlayer
Body: {"nickname":"sECuRE"}
Response:
{"success":true,
 "error":"",
 "token":"939393"}

Das token muss später mitgeschickt werden, wenn der Spieler ein Spiel aufmacht
oder einem Spiel beitritt. Auf diese Weise kann man am Anfang einen Namen
eingeben und es kann geprüft werden, ob es derzeit schon einen Spieler mit
diesem Namen gibt. 24 Stunden nach der letzten Aktivität verfällt das Token.

-------------------------------
Request: POST /CreateGame
Body: {"token":"939393", "size":3}
Response:
{"success":true,
 "error":"",
 "id":"3984843...",
 "name":"foo",
 "words":[
   "Win-Win",
   "Return of Investment",
   "Blah",
   "Management"
 ]}

Die Wörter müssen von links oben nach rechts verteilt werden, z.B. bei einem
3x3 Feld folgendermaßen:

Win-Win | Return of Investment | Blah
Management |

-------------------------------
Request: POST /JoinGame
Body: {"token":"93939393", "id":"398484..."}
Response:
{"success":true,
 "error":"",
 "size":3,
 "words":["foo", "bar"]}

-------------------------------
Request: POST /LeaveGame
Body: {"token":"93939393", "id":"398484..."}
Response:
{"success":true,
 "error":""}

-------------------------------
Request: POST /MakeMove
Body: {"token":"93939393", "id":"398484...", "field":7}
Response:
{"success":true,
 "error":""}

Die Feldnummer wird ebenfalls von links oben nach rechts durchgezählt, beginnend mit 0.

-------------------------------
Request: POST /CheckWinner
Body: {"token":"93939393", "id":"398484.."}
Response:
{"success":true,
 "error":"",
 "winner": null
}

Sofern jemand das Spiel gewonnen hat, wird dessen Nickname in "winner" als
String zurückgegeben. Der Client sollte dann das Spiel beenden und nicht mehr
nach dem Gewinner fragen.

-------------------------------

